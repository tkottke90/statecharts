name: Create Release

on:
  push:
    branches:
      - main
    tags:
      - v*

env:
  IS_SNAPSHOT: ${{ github.ref == 'refs/heads/main' }}
  IS_RELEASE: ${{ startsWith(github.ref, 'refs/tags/v') }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: 'Get Node Version from package.json'
        id: get_node_version
        run: |
          NODE_VERSION=$(jq -r '.engines.node' package.json | sed 's/>=//g' | sed 's/\..*//')
          echo "NODE_VERSION=$NODE_VERSION" >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup
        run: npm ci

      - name: 'Get Version from package.json'
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: 'Get Short SHA'
        id: get_short_sha
        run: echo "SHORT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV

      - name: 'Create Release Filename Suffix'
        id: create_release_filename_suffix
        run: |
          if [ "${{ env.IS_SNAPSHOT }}" == "true" ]; then
            echo "RELEASE_FILENAME_SUFFIX=${{ env.SHORT_SHA }}-SNAPSHOT" >> $GITHUB_ENV
          else
            echo "RELEASE_FILENAME_SUFFIX=" >> $GITHUB_ENV
          fi

      - name: 'Create Release Filename'
        id: create_release_filename
        run: echo "RELEASE_FILENAME=@tkottke90-statecharts-${{ env.VERSION }}${{ env.RELEASE_FILENAME_SUFFIX != '' && format('-{0}', env.RELEASE_FILENAME_SUFFIX) || '' }}.tar.gz" >> $GITHUB_ENV

      - name: Build
        run: npm run build

      - name: Test
        # Run tests if npm run test is available otherwise log no tests found
        run: npm run test --if-present || echo "No tests found"

      - name: Package the artifacts
        # Tar the dist folder into a archive as long as the RELEASE_FILENAME is set or throw an error
        run: |
          if [ -z "${{ env.RELEASE_FILENAME }}" ]; then
            echo "RELEASE_FILENAME is not set. Aborting."
            exit 1
          fi

          tar -czvf ${{ env.RELEASE_FILENAME }} dist package.json package-lock.json

      - name: Create Tag
        id: create_tag
        run: echo "TAG=v${{ env.VERSION }}${{ env.RELEASE_FILENAME_SUFFIX != '' && format('-{0}', env.RELEASE_FILENAME_SUFFIX) || '' }}" >> $GITHUB_ENV

      - name: Release
        if: ${{ env.IS_RELEASE == 'true' }}
        uses: softprops/action-gh-release@v2.3.3
        with:
          make_latest: true
          files: ${{ env.RELEASE_FILENAME }}
          name: Release ${{ env.VERSION }}${{ env.RELEASE_FILENAME_SUFFIX != '' && format('-{0}', env.RELEASE_FILENAME_SUFFIX) || '' }}
          generate_release_notes: true
          draft: false
          prerelease: ${{ env.IS_SNAPSHOT == 'true' }}
          tag: ${{ github.ref }}

      - name: Save Artifact
        if: ${{ env.IS_SNAPSHOT == 'true' }}
        uses: actions/upload-artifact@v5
        with:
          name: ${{ env.VERSION }}${{ env.RELEASE_FILENAME_SUFFIX != '' && format('-{0}', env.RELEASE_FILENAME_SUFFIX) || '' }}
          path: ${{ env.RELEASE_FILENAME }}

      - name: Create version bump branch
        run: |
          BRANCH_NAME="version-bump-$(date +%s)"
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Bump version
        run: |
          npm version minor --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          git add package.json package-lock.json
          git commit -m "chore: bump version to $NEW_VERSION"

      - name: Push version bump branch
        run: |
          git push origin $BRANCH_NAME

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.BRANCH_NAME }}
          base: main
          title: "chore: bump version to ${{ env.NEW_VERSION }}"
          body: |
            ## Version Bump

            This PR bumps the version from ${{ needs.build.outputs.version }} to ${{ env.NEW_VERSION }} following the release.

            ### Changes
            - Updated `package.json` version
            - Updated `package-lock.json` version

            This PR was automatically created by the release workflow.
          delete-branch: true
