<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://www.w3.org/2005/07/scxml"
           xmlns:scxml="http://www.w3.org/2005/07/scxml"
           elementFormDefault="qualified">

  <!-- Root SCXML element -->
  <xs:element name="scxml" type="scxml:ScxmlType"/>

  <!-- SCXML root type -->
  <xs:complexType name="ScxmlType">
    <xs:sequence>
      <xs:element name="datamodel" type="scxml:DatamodelType" minOccurs="0"/>
      <xs:choice maxOccurs="unbounded">
        <xs:element name="state" type="scxml:StateType"/>
        <xs:element name="parallel" type="scxml:ParallelType"/>
        <xs:element name="final" type="scxml:FinalType"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="version" type="xs:string" use="required"/>
    <xs:attribute name="datamodel" type="xs:string" default="ecmascript"/>
    <xs:attribute name="initial" type="xs:string"/>
    <xs:attribute name="name" type="xs:string"/>
    <xs:attribute name="xmlns" type="xs:string" fixed="http://www.w3.org/2005/07/scxml"/>
  </xs:complexType>

  <!-- State element -->
  <xs:complexType name="StateType">
    <xs:sequence>
      <xs:element name="onentry" type="scxml:OnEntryType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="onexit" type="scxml:OnExitType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="transition" type="scxml:TransitionType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="initial" type="scxml:InitialType" minOccurs="0"/>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="state" type="scxml:StateType"/>
        <xs:element name="parallel" type="scxml:ParallelType"/>
        <xs:element name="final" type="scxml:FinalType"/>
        <xs:element name="history" type="scxml:HistoryType"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required"/>
    <xs:attribute name="initial" type="xs:string"/>
  </xs:complexType>

  <!-- Parallel element -->
  <xs:complexType name="ParallelType">
    <xs:sequence>
      <xs:element name="onentry" type="scxml:OnEntryType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="onexit" type="scxml:OnExitType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="transition" type="scxml:TransitionType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:choice maxOccurs="unbounded">
        <xs:element name="state" type="scxml:StateType"/>
        <xs:element name="parallel" type="scxml:ParallelType"/>
        <xs:element name="history" type="scxml:HistoryType"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required"/>
  </xs:complexType>

  <!-- Final element -->
  <xs:complexType name="FinalType">
    <xs:sequence>
      <xs:element name="onentry" type="scxml:OnEntryType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="onexit" type="scxml:OnExitType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required"/>
  </xs:complexType>

  <!-- History element -->
  <xs:complexType name="HistoryType">
    <xs:sequence>
      <xs:element name="transition" type="scxml:TransitionType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required"/>
    <xs:attribute name="type" type="scxml:HistoryTypeEnum" default="shallow"/>
  </xs:complexType>

  <xs:simpleType name="HistoryTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="shallow"/>
      <xs:enumeration value="deep"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Initial element -->
  <xs:complexType name="InitialType">
    <xs:sequence>
      <xs:element name="transition" type="scxml:TransitionType"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Transition element -->
  <xs:complexType name="TransitionType">
    <xs:sequence>
      <xs:group ref="scxml:ExecutableContent" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="event" type="xs:string"/>
    <xs:attribute name="cond" type="xs:string"/>
    <xs:attribute name="target" type="xs:string"/>
    <xs:attribute name="type" type="scxml:TransitionTypeEnum" default="external"/>
  </xs:complexType>

  <xs:simpleType name="TransitionTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="internal"/>
      <xs:enumeration value="external"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Entry and Exit actions -->
  <xs:complexType name="OnEntryType">
    <xs:sequence>
      <xs:group ref="scxml:ExecutableContent" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="OnExitType">
    <xs:sequence>
      <xs:group ref="scxml:ExecutableContent" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Data model elements -->
  <xs:complexType name="DatamodelType">
    <xs:sequence>
      <xs:element name="data" type="scxml:DataType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="DataType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="id" type="xs:ID" use="required"/>
        <xs:attribute name="expr" type="xs:string"/>
        <xs:attribute name="src" type="xs:anyURI"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- Executable content group -->
  <xs:group name="ExecutableContent">
    <xs:choice>
      <xs:element name="raise" type="scxml:RaiseType"/>
      <xs:element name="assign" type="scxml:AssignType"/>
      <xs:element name="send" type="scxml:SendType"/>
      <xs:element name="log" type="scxml:LogType"/>
      <xs:element name="script" type="scxml:ScriptType"/>
      <xs:element name="if" type="scxml:IfType"/>
      <xs:element name="foreach" type="scxml:ForeachType"/>
    </xs:choice>
  </xs:group>

  <!-- Raise element -->
  <xs:complexType name="RaiseType">
    <xs:attribute name="event" type="xs:string"/>
    <xs:attribute name="eventexpr" type="xs:string"/>
  </xs:complexType>

  <!-- Assign element -->
  <xs:complexType name="AssignType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="location" type="xs:string" use="required"/>
        <xs:attribute name="expr" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- Send element for external communication -->
  <xs:complexType name="SendType">
    <xs:sequence>
      <xs:element name="param" type="scxml:ParamType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="event" type="xs:string"/>
    <xs:attribute name="eventexpr" type="xs:string"/>
    <xs:attribute name="target" type="xs:string"/>
    <xs:attribute name="targetexpr" type="xs:string"/>
    <xs:attribute name="type" type="xs:string" default="scxml"/>
    <xs:attribute name="typeexpr" type="xs:string"/>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="idlocation" type="xs:string"/>
    <xs:attribute name="delay" type="xs:string"/>
    <xs:attribute name="delayexpr" type="xs:string"/>
    <xs:attribute name="namelist" type="xs:string"/>
  </xs:complexType>

  <!-- Param element for send parameters -->
  <xs:complexType name="ParamType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="expr" type="xs:string"/>
        <xs:attribute name="location" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- Log element -->
  <xs:complexType name="LogType">
    <xs:attribute name="label" type="xs:string"/>
    <xs:attribute name="expr" type="xs:string"/>
  </xs:complexType>

  <!-- Script element -->
  <xs:complexType name="ScriptType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="src" type="xs:anyURI"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- Conditional elements -->
  <xs:complexType name="IfType">
    <xs:sequence>
      <xs:group ref="scxml:ExecutableContent" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="elseif" type="scxml:ElseIfType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="else" type="scxml:ElseType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="cond" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ElseIfType">
    <xs:sequence>
      <xs:group ref="scxml:ExecutableContent" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="cond" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ElseType">
    <xs:sequence>
      <xs:group ref="scxml:ExecutableContent" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!-- Foreach element -->
  <xs:complexType name="ForeachType">
    <xs:sequence>
      <xs:group ref="scxml:ExecutableContent" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="array" type="xs:string" use="required"/>
    <xs:attribute name="item" type="xs:string" use="required"/>
    <xs:attribute name="index" type="xs:string"/>
  </xs:complexType>

</xs:schema>
